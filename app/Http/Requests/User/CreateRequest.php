<?php

namespace App\Http\Requests\User;

use Illuminate\Foundation\Http\FormRequest;

class CreateRequest extends FormRequest
{
    /**
     * Обязательно должно быть true
     * Это стандартная проверка на то что к валидации есть доступ
     * В больших проектах можно программировать для доступности
     * Сейчас просто True, по default создается со значением false
     *
     * Команда: php artisan make:request NameRequest
     * Команда: php artisan make:request User/NameRequest
     * Последняя команда создает папку User и файл там NameRequest.php
     */
    public function authorize(): bool
    {
        return true;
    }

    /**
     * Здесь мы пишем правила проверки полей, можно писать двумя способами:
     * 1 - 'required|string|min:8' - говорит что обязательно, что текстовое, минимум 8 символов
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            'name' => 'required|string|max:255',
            'email' => 'required|string|email|max:255|unique:users',
            'password' => 'required|string|confirmed|min:8',
        ];
    }

    /**
     * Это создается вручную, если хочешь переопределить текст сообщений об ошибках
     * Так же можешь поменять текст в lang
     *
     * Чтобы появился lang: php artisan lang:publish
     */
    public function messages()
    {
        return parent::messages() + [
            'required' => 'Данное поле обязательно'
            ]; // TODO: Change the autogenerated stub
    }
}
